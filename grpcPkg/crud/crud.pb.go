// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: crud.proto

package crud

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EmpId         int32                  `protobuf:"varint,3,opt,name=emp_id,json=empId,proto3" json:"emp_id,omitempty"`
	Gender        string                 `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Premium       int32                  `protobuf:"varint,5,opt,name=premium,proto3" json:"premium,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserSpec) Reset() {
	*x = UserSpec{}
	mi := &file_crud_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSpec) ProtoMessage() {}

func (x *UserSpec) ProtoReflect() protoreflect.Message {
	mi := &file_crud_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSpec.ProtoReflect.Descriptor instead.
func (*UserSpec) Descriptor() ([]byte, []int) {
	return file_crud_proto_rawDescGZIP(), []int{0}
}

func (x *UserSpec) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserSpec) GetEmpId() int32 {
	if x != nil {
		return x.EmpId
	}
	return 0
}

func (x *UserSpec) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UserSpec) GetPremium() int32 {
	if x != nil {
		return x.Premium
	}
	return 0
}

type Id struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Id) Reset() {
	*x = Id{}
	mi := &file_crud_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_crud_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_crud_proto_rawDescGZIP(), []int{1}
}

func (x *Id) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_crud_proto protoreflect.FileDescriptor

const file_crud_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"crud.proto\x12\x04crud\"w\n" +
	"\bUserSpec\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x15\n" +
	"\x06emp_id\x18\x03 \x01(\x05R\x05empId\x12\x16\n" +
	"\x06gender\x18\x04 \x01(\tR\x06gender\x12\x18\n" +
	"\apremium\x18\x05 \x01(\x05R\apremium\"\x14\n" +
	"\x02Id\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id2\xaa\x01\n" +
	"\vCrudService\x12#\n" +
	"\aGetUser\x12\b.crud.Id\x1a\x0e.crud.UserSpec\x12#\n" +
	"\aNewUser\x12\x0e.crud.UserSpec\x1a\b.crud.Id\x12&\n" +
	"\n" +
	"DeleteUser\x12\b.crud.Id\x1a\x0e.crud.UserSpec\x12)\n" +
	"\aSetUser\x12\x0e.crud.UserSpec\x1a\x0e.crud.UserSpecB5Z3github.com/abhijeet-singh800/grpc-test/grpcPkg/crudb\x06proto3"

var (
	file_crud_proto_rawDescOnce sync.Once
	file_crud_proto_rawDescData []byte
)

func file_crud_proto_rawDescGZIP() []byte {
	file_crud_proto_rawDescOnce.Do(func() {
		file_crud_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_crud_proto_rawDesc), len(file_crud_proto_rawDesc)))
	})
	return file_crud_proto_rawDescData
}

var file_crud_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_crud_proto_goTypes = []any{
	(*UserSpec)(nil), // 0: crud.UserSpec
	(*Id)(nil),       // 1: crud.Id
}
var file_crud_proto_depIdxs = []int32{
	1, // 0: crud.CrudService.GetUser:input_type -> crud.Id
	0, // 1: crud.CrudService.NewUser:input_type -> crud.UserSpec
	1, // 2: crud.CrudService.DeleteUser:input_type -> crud.Id
	0, // 3: crud.CrudService.SetUser:input_type -> crud.UserSpec
	0, // 4: crud.CrudService.GetUser:output_type -> crud.UserSpec
	1, // 5: crud.CrudService.NewUser:output_type -> crud.Id
	0, // 6: crud.CrudService.DeleteUser:output_type -> crud.UserSpec
	0, // 7: crud.CrudService.SetUser:output_type -> crud.UserSpec
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_crud_proto_init() }
func file_crud_proto_init() {
	if File_crud_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_crud_proto_rawDesc), len(file_crud_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crud_proto_goTypes,
		DependencyIndexes: file_crud_proto_depIdxs,
		MessageInfos:      file_crud_proto_msgTypes,
	}.Build()
	File_crud_proto = out.File
	file_crud_proto_goTypes = nil
	file_crud_proto_depIdxs = nil
}

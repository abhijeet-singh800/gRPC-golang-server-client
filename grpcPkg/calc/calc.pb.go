// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: calc.proto

package calc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Two struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	First         int32                  `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	Sec           int32                  `protobuf:"varint,2,opt,name=sec,proto3" json:"sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Two) Reset() {
	*x = Two{}
	mi := &file_calc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Two) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Two) ProtoMessage() {}

func (x *Two) ProtoReflect() protoreflect.Message {
	mi := &file_calc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Two.ProtoReflect.Descriptor instead.
func (*Two) Descriptor() ([]byte, []int) {
	return file_calc_proto_rawDescGZIP(), []int{0}
}

func (x *Two) GetFirst() int32 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *Two) GetSec() int32 {
	if x != nil {
		return x.Sec
	}
	return 0
}

type One struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Num           int32                  `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *One) Reset() {
	*x = One{}
	mi := &file_calc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *One) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*One) ProtoMessage() {}

func (x *One) ProtoReflect() protoreflect.Message {
	mi := &file_calc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use One.ProtoReflect.Descriptor instead.
func (*One) Descriptor() ([]byte, []int) {
	return file_calc_proto_rawDescGZIP(), []int{1}
}

func (x *One) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

var File_calc_proto protoreflect.FileDescriptor

const file_calc_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"calc.proto\x12\x04calc\"-\n" +
	"\x03Two\x12\x14\n" +
	"\x05first\x18\x01 \x01(\x05R\x05first\x12\x10\n" +
	"\x03sec\x18\x02 \x01(\x05R\x03sec\"\x17\n" +
	"\x03One\x12\x10\n" +
	"\x03num\x18\x01 \x01(\x05R\x03num2\x81\x01\n" +
	"\vCalcService\x12\x1b\n" +
	"\x03Add\x12\t.calc.Two\x1a\t.calc.One\x12\x1b\n" +
	"\x03Sub\x12\t.calc.Two\x1a\t.calc.One\x12\x1b\n" +
	"\x03Mul\x12\t.calc.Two\x1a\t.calc.One\x12\x1b\n" +
	"\x03Div\x12\t.calc.Two\x1a\t.calc.OneB5Z3github.com/abhijeet-singh800/grpc-test/grpcPkg/calcb\x06proto3"

var (
	file_calc_proto_rawDescOnce sync.Once
	file_calc_proto_rawDescData []byte
)

func file_calc_proto_rawDescGZIP() []byte {
	file_calc_proto_rawDescOnce.Do(func() {
		file_calc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_calc_proto_rawDesc), len(file_calc_proto_rawDesc)))
	})
	return file_calc_proto_rawDescData
}

var file_calc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_calc_proto_goTypes = []any{
	(*Two)(nil), // 0: calc.Two
	(*One)(nil), // 1: calc.One
}
var file_calc_proto_depIdxs = []int32{
	0, // 0: calc.CalcService.Add:input_type -> calc.Two
	0, // 1: calc.CalcService.Sub:input_type -> calc.Two
	0, // 2: calc.CalcService.Mul:input_type -> calc.Two
	0, // 3: calc.CalcService.Div:input_type -> calc.Two
	1, // 4: calc.CalcService.Add:output_type -> calc.One
	1, // 5: calc.CalcService.Sub:output_type -> calc.One
	1, // 6: calc.CalcService.Mul:output_type -> calc.One
	1, // 7: calc.CalcService.Div:output_type -> calc.One
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_calc_proto_init() }
func file_calc_proto_init() {
	if File_calc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_calc_proto_rawDesc), len(file_calc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calc_proto_goTypes,
		DependencyIndexes: file_calc_proto_depIdxs,
		MessageInfos:      file_calc_proto_msgTypes,
	}.Build()
	File_calc_proto = out.File
	file_calc_proto_goTypes = nil
	file_calc_proto_depIdxs = nil
}
